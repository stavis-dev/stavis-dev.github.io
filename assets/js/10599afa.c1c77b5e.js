"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[968],{4137:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),s=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,p=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,f=c["".concat(i,".").concat(d)]||c[d]||u[d]||p;return t?a.createElement(f,o(o({ref:n},m),{},{components:t})):a.createElement(f,o({ref:n},m))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var p=t.length,o=new Array(p);o[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<p;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(4137));const p={sidebar_label:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map()",title:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map() \u0432 python",author:"stavis",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",tags:["functions","map"]},o="\u0424\u0443\u043d\u043a\u0446\u0438\u044f map",l={unversionedId:"python/functions/map",id:"python/functions/map",title:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map() \u0432 python",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",source:"@site/docs/python/functions/map.md",sourceDirName:"python/functions",slug:"/python/functions/map",permalink:"/python/functions/map",draft:!1,editUrl:"https://github.com/stavis-dev/stavis-dev.github.io/tree/main/docs/python/functions/map.md",tags:[{label:"functions",permalink:"/tags/functions"},{label:"map",permalink:"/tags/map"}],version:"current",lastUpdatedBy:"Stavis",lastUpdatedAt:1730305734,formattedLastUpdatedAt:"30 \u043e\u043a\u0442. 2024 \u0433.",frontMatter:{sidebar_label:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map()",title:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map() \u0432 python",author:"stavis",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",tags:["functions","map"]},sidebar:"pythonSidebar",previous:{title:"lambda \u0444\u0443\u043d\u043a\u0446\u0438\u0438",permalink:"/python/functions/lambda"},next:{title:"\u0444\u0443\u043d\u043a\u0446\u0438\u044f sorted()",permalink:"/python/functions/python-sorted"}},i={},s=[{value:"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:",id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430",level:2},{value:"List comprehension \u0432\u043c\u0435\u0441\u0442\u043e map",id:"list-comprehension-\u0432\u043c\u0435\u0441\u0442\u043e-map",level:2},{value:"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:",id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430-1",level:2}],m={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u044f-map"},"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map"),(0,r.kt)("p",null,"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438\n\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438."),(0,r.kt)("p",null,"\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e map \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\u041f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"list_of_words = ['one', 'two', 'list', '', 'dict']\n\nmap(str.upper, list_of_words)\n# <map at 0xb45eb7ec>\n\nlist(map(str.upper, list_of_words))\n# ['ONE', 'TWO', 'LIST', '', 'DICT']\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},'str.upper("aaa")')," \u0434\u0435\u043b\u0430\u0435\u0442 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e ",(0,r.kt)("inlineCode",{parentName:"p"},'"aaa".upper()'),".")),(0,r.kt)("h2",{id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430"},"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"list_of_str = ['1', '2', '5', '10']\n\nlist(map(int, list_of_str))\n# [1, 2, 5, 10]\n")),(0,r.kt)("p",null,"\u0412\u043c\u0435\u0441\u0442\u0435 \u0441 map \u0443\u0434\u043e\u0431\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"vlans = [100, 110, 150, 200, 201, 202]\n\nlist(map(lambda x: 'vlan {}'.format(x), vlans))\n# ['vlan 100', 'vlan 110', 'vlan 150', 'vlan 200', 'vlan 201', 'vlan 202']\n")),(0,r.kt)("p",null,"\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 map(), \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0434\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u0442\u043e\n\u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u0441\u043f\u0438\u0441\u043a\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"nums = [1, 2, 3, 4, 5]\nnums2 = [100, 200, 300, 400, 500]\n\nlist(map(lambda x, y: x*y, nums, nums2))\n# [100, 400, 900, 1600, 2500]\n")),(0,r.kt)("h2",{id:"list-comprehension-\u0432\u043c\u0435\u0441\u0442\u043e-map"},"List comprehension \u0432\u043c\u0435\u0441\u0442\u043e map"),(0,r.kt)("p",null,"\u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0432\u043c\u0435\u0441\u0442\u043e map \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c ",(0,r.kt)("a",{parentName:"p",href:"/python/types/x_comprehensions"},"list comprehension"),". \u0427\u0430\u0449\u0435\n\u0432\u0441\u0435\u0433\u043e, \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 ",(0,r.kt)("inlineCode",{parentName:"p"},"list comprehension")," \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439, \u0430 \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445\n\u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0434\u0430\u0436\u0435 \u0431\u044b\u0441\u0442\u0440\u0435\u0435."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/1247490"},"\u041e\u0442\u0432\u0435\u0442")," Alex Martelli \u0441\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u043c map \u0438 list comprehension"),(0,r.kt)("p",null,"\u041d\u043e map \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0439 \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u0434\u043e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0442\u0430\u043a \u043a\u0430\u043a map - \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440, \u0430 list\ncomprehension \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a."),(0,r.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u043c \u0432\u044b\u0448\u0435, \u0432 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 \u0441 list comprehension."),(0,r.kt)("p",null,"\u041f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"list_of_words = ['one', 'two', 'list', '', 'dict']\nuppers = [word.upper() for word in list_of_words]\n\n# ['ONE', 'TWO', 'LIST', '', 'DICT']\n")),(0,r.kt)("h2",{id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430-1"},"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"list_of_str = ['1', '2', '5', '10']\n\nnums = [int(i) for i in list_of_str]\n\n# [1, 2, 5, 10]\n")),(0,r.kt)("p",null,"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"vlans = [100, 110, 150, 200, 201, 202]\n\nlc = [f'vlan {x}' for x in vlans]\n# ['vlan 100', 'vlan 110', 'vlan 150', 'vlan 200', 'vlan 201', 'vlan 202']\n")),(0,r.kt)("p",null,"\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f zip:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"nums = [1, 2, 3, 4, 5]\nnums2 = [100, 200, 300, 400, 500]\n\nlc = [x * y for x, y in zip(nums, nums2)]\n# [100, 400, 900, 1600, 2500]\n")))}u.isMDXComponent=!0}}]);